<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Include base logging configuration from Spring Boot -->
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <!-- Define a property for the paths to store logs -->
    <property name="INFO_LOG_PATH" value="logs/posts/info.log" />
    <property name="ERROR_LOG_PATH" value="logs/posts/error.log" />
    <property name="WARN_LOG_PATH" value="logs/posts/warn.log" />
    <property name="DEBUG_LOG_PATH" value="logs/posts/debug.log" />
    <property name="OTHER_LOG_PATH" value="logs/posts/other.log" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--            <pattern>[uniqueLogId=%X{uniqueLogId},parentId=%X{parentId}]${CONSOLE_LOG_PATTERN}</pattern>-->
            <pattern>%d{ HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    <appender name="STDOUT_JSON" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <logLevel/>
                <threadName/>
                <loggerName/>
                <arguments>
                </arguments>
                <message>
                    <fieldName>msg</fieldName>
                </message>
                <mdc>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                </mdc>
            </providers>
        </encoder>
    </appender>

    <!-- INFO level log configuration -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- Define the file path for INFO logs -->
        <file>${INFO_LOG_PATH}</file>
        <!-- Define the rolling policy for log rotation based on time -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- Use a pattern for naming log files, including the date and hour -->
            <fileNamePattern>logs/info/info.%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <!-- Specify the maximum number of rolled over files to keep (in this case, 50) -->
            <maxHistory>50</maxHistory>
        </rollingPolicy>
        <!-- Pattern for log messages -->
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <!-- Include a timestamp in each log entry with a specific pattern and timezone -->
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                    <timeZone>Asia/Dhaka</timeZone>
                </timestamp>
                <!-- Add the log level (e.g., INFO, ERROR) to each log entry -->
                <logLevel/>
                <!-- Include arguments passed in the log entry if any -->
                <arguments>
                </arguments>
                <!-- Specify the main message of the log with a field name 'msg' -->
                <message>
                    <fieldName>msg</fieldName>
                </message>
                <!-- Include the name of the thread where the log was generated -->
                <threadName/>
                <!-- Include the name of the logger which generated the log -->
                <loggerName/>
                <!-- Include values from the MDC (Mapped Diagnostic Context) for context-specific information -->
                <mdc>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                </mdc>
            </providers>
        </encoder>
        <!-- Filter to log only INFO and higher levels -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- ERROR level log configuration -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${ERROR_LOG_PATH}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/error/error.%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <maxHistory>50</maxHistory>
        </rollingPolicy>
        <!-- Pattern for log messages -->
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <!-- Include a timestamp in each log entry with a specific pattern and timezone -->
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                    <timeZone>Asia/Dhaka</timeZone>
                </timestamp>
                <logLevel/>
                <arguments>
                </arguments>
                <message>
                    <fieldName>msg</fieldName>
                </message>
                <threadName/>
                <loggerName/>
                <mdc>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                </mdc>
            </providers>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- WARN level log configuration -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${WARN_LOG_PATH}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/warn/warn.%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <maxHistory>50</maxHistory>
        </rollingPolicy>
        <!-- Pattern for log messages -->
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <!-- Include a timestamp in each log entry with a specific pattern and timezone -->
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                    <timeZone>Asia/Dhaka</timeZone>
                </timestamp>
                <logLevel/>
                <arguments>
                </arguments>
                <message>
                    <fieldName>msg</fieldName>
                </message>
                <threadName/>
                <loggerName/>
                <mdc>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                </mdc>
            </providers>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- DEBUG level log configuration -->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${DEBUG_LOG_PATH}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/debug/debug.%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <maxHistory>50</maxHistory>
        </rollingPolicy>
        <!-- Pattern for log messages -->
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <!-- Include a timestamp in each log entry with a specific pattern and timezone -->
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                    <timeZone>Asia/Dhaka</timeZone>
                </timestamp>
                <logLevel/>
                <arguments>
                </arguments>
                <message>
                    <fieldName>msg</fieldName>
                </message>
                <threadName/>
                <loggerName/>
                <mdc>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                </mdc>
            </providers>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- Default level log configuration -->
    <appender name="OTHER_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${OTHER_LOG_PATH}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/other/other.%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            <maxHistory>50</maxHistory>
        </rollingPolicy>
        <!-- Pattern for log messages -->
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <!-- Include a timestamp in each log entry with a specific pattern and timezone -->
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                    <timeZone>Asia/Dhaka</timeZone>
                </timestamp>
                <logLevel/>
                <arguments>
                </arguments>
                <message>
                    <fieldName>msg</fieldName>
                </message>
                <threadName/>
                <loggerName/>
                <mdc>
                    <includeMdcKeyName>traceId</includeMdcKeyName>
                </mdc>
            </providers>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>DENY</onMatch>
            <onMismatch>NEUTRAL</onMismatch>
        </filter>

    </appender>

    <!-- Define the root logger with references to both INFO and ERROR appenders -->
    <root level="INFO">
        <appender-ref ref="INFO_FILE" />
        <appender-ref ref="ERROR_FILE" />
        <appender-ref ref="WARN_FILE" />
        <appender-ref ref="DEBUG_FILE" />
        <appender-ref ref="OTHER_FILE" />
    </root>
</configuration>