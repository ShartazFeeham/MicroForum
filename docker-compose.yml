version: "3.8"
services:

  # DATABASES
  # Postgres database for post-service
  post-service-pg-db:
    image: postgres:14.15-alpine3.20
    container_name: post-service-pg-db_container
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: post-service-pg-db
      POSTGRES_USER: post-service-pg-db_user
      POSTGRES_PASSWORD: post-service-pg-db_password
    volumes:
      - post-service-pg-db_local_data:/var/lib/postgresql/data
  # PG Admin for postgres database UI
  pg-admin-postgres-ui:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8088:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  elasticsearch_for_logs:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./logs/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    ports:
      - "5601:5601"  # Maps port 5601 on the host to port 5601 on the container for accessing Kibana UI.
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200  # Configures Kibana to connect to Elasticsearch at the given URL.
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'  # Specifies the URL for Kibana to connect to Elasticsearch.
    depends_on: # Ensures Kibana starts after Elasticsearch.
      - elasticsearch_for_logs
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash
    volumes: # Mounts volumes for configuration and pipeline data.
      - ./logs/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro  # Mounts the configuration file in read-only mode.
      - ./logs/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ls_data:/usr/share/logstash/data
    ports: # Maps host ports to container ports for Logstash.
      - "5044:5044"  # Maps port 5044 for Beats input.
      - "5000:5000/tcp"  # Maps port 5000 for TCP input.
      - "5000:5000/udp"  # Maps port 5000 for UDP input.
      - "9600:9600"  # Maps port 9600 for Logstash monitoring API.
    environment: # Sets environment variables for Logstash.
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"  # Configures the JVM heap size for Logstash.
    networks:
      - elastic
    depends_on: # Ensures Logstash starts after Elasticsearch.
      - elasticsearch_for_logs

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.3.3
    container_name: filebeat
    user: root  # Run as root if necessary for file access
    command: [ "filebeat", "-e", "--strict.perms=false" ]
    volumes:
      - ./logs/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro  # Mount your Filebeat config
      # Posts service log location : container storage location where to copy logs
      - ./logs/posts:/var/logs/micro-forum/posts_service:ro
      # Add more service here
    networks:
      - elastic
    depends_on:
      - logstash  # Ensure Filebeat starts after Logstash

networks: # Defines custom networks.
  elastic:
    driver: bridge  # Specifies the bridge driver for creating an isolated network.

volumes: # Defines named volumes for data persistence.
  elasticsearch_data:
    driver: local  # Specifies the local driver for volume storage.
  post-service-pg-db_local_data:
  pgadmin-data:
  ls_data: