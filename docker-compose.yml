version: "3.8"
services:

  # DATABASES
  # Postgres database for post-service
  post-service-pg-db:
    image: postgres:14.15-alpine3.20
    container_name: post-service-pg-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: post-service-pg-db
      POSTGRES_USER: post-service-pg-db_user
      POSTGRES_PASSWORD: post-service-pg-db_password
    volumes:
      - post-service-pg-db_local_data:/var/lib/postgresql/data
  # PG Admin for postgres database UI
  pg-admin-postgres-ui:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8088:80"
    depends_on:
      - post-service-pg-db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  elasticsearch_for_logs:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true  # Enables memory locking for performance and stability.
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # Configures the JVM heap size for Elasticsearch.
      - "discovery.type=single-node"  # Configures Elasticsearch to run in single-node mode.
      - xpack.security.enabled=false  # Disables the security features of X-Pack for Elasticsearch.
    ports:
      - "9200:9200"
    volumes: # Mounts a volume to persist Elasticsearch data.
      - elasticsearch_data:/usr/share/elasticsearch/data  # Mounts the named volume for data persistence.
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    ports:
      - "5601:5601"  # Maps port 5601 on the host to port 5601 on the container for accessing Kibana UI.
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200  # Configures Kibana to connect to Elasticsearch at the given URL.
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'  # Specifies the URL for Kibana to connect to Elasticsearch.
    depends_on: # Ensures Kibana starts after Elasticsearch.
      - elasticsearch_for_logs
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash
    volumes: # Mounts volumes for configuration and pipeline data.
      - ./observability/logging/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro  # Mounts the configuration file in read-only mode.
      - ./observability/logging/config/pipeline:/usr/share/logstash/pipeline:ro  # Mounts the pipeline directory in read-only mode.
    ports: # Maps host ports to container ports for Logstash.
      - "5044:5044"  # Maps port 5044 for Beats input.
      - "5000:5000/tcp"  # Maps port 5000 for TCP input.
      - "5000:5000/udp"  # Maps port 5000 for UDP input.
      - "9600:9600"  # Maps port 9600 for Logstash monitoring API.
    environment: # Sets environment variables for Logstash.
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"  # Configures the JVM heap size for Logstash.
    networks:
      - elastic
    depends_on: # Ensures Logstash starts after Elasticsearch.
      - elasticsearch_for_logs

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.3.3
    container_name: filebeat
    user: root  # Run as root if necessary for file access
    command: [ "filebeat", "-e", "--strict.perms=false" ]
    volumes:
      - ./observability/logging/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro  # Mount your Filebeat config
      # Posts service log location : container storage location where to copy logs
      - ./observability/logging/logs/posts:/var/logs/micro-forum/posts_service:ro
      - ./observability/logging/logs/gateway:/var/logs/micro-forum/gateway_service:ro
      # Add more service here
    networks:
      - elastic
    depends_on:
      - logstash  # Ensure Filebeat starts after Logstash

  # Monitoring
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/monitoring/config/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./observability/monitoring/config/datasources:/etc/grafana/provisioning/datasources

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # Main port for RabbitMQ (AMQP protocol)
      - "15672:15672" # Port for RabbitMQ Management Plugin (web UI)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    hostname: rabbitmq

  config-server:
    image: feeham/micro_forum:config-server-1.4
    container_name: config-server
    ports:
      - "8888:8888"

  discovery-server:
    image: feeham/micro_forum:discovery-server-1.3
    container_name: discovery-server
    ports:
      - "7777:7777"
    depends_on:
      - "config-server"
    environment:
      SPRING_CONFIG_IMPORT: "optional:configserver:http://config-server:8888/"

  posts:
    image: feeham/micro_forum:posts-1.3
    container_name: posts
    ports:
      - "3100:3100"
    depends_on:
      - config-server
      - discovery-server
      - post-service-pg-db
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:7777/eureka/

  notifications:
    image: feeham/micro_forum:notifications-1.0
    container_name: notifications
    ports:
      - "3400:3400"
    depends_on:
      - config-server
      - discovery-server
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:7777/eureka/

  gateway:
    image: feeham/micro_forum:gateway-1.0
    container_name: gateway
    ports:
      - "9999:9999"
    depends_on:
      - config-server
      - discovery-server
      - posts
      - notifications
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:7777/eureka/

# Defines custom networks.
networks: # Defines custom networks.
  elastic:
    driver: bridge  # Specifies the bridge driver for creating an isolated network.

volumes: # Defines named volumes for data persistence.
  elasticsearch_data:
    driver: local  # Specifies the local driver for volume storage.
  post-service-pg-db_local_data:
  pgadmin-data:

